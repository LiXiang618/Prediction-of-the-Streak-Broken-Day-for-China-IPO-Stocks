df2$Correct = (df2$Correct == df2$OpenNextDay)
df2$Code = df$Code
agg = aggregate(df2,by = list(df2$Code),FUN = min)
tmp = data.frame(Code = agg$Group.1, Correct = agg$Correct)
summary(tmp$Correct)
View(tmp)
df2$Days = df$Days
nrow(df2)
i
i=1
this = df2[i,]
this = df2[i,];this
subset = df2[which(df$OpenNextDay==FALSE)]
subset = df2[which(df$OpenNextDay==FALSE),]
View(subset)
subset = df2[which(df2$Correct==FALSE),]
table(subset$Code)
subset = subset[order(subset$T),]
for (i in subset){
print(i)
}
i
i=1
this = subset[i,]
code = this$Code
tmp = c(which(subset$Code==code))
tmp
tmp = tmp[which(tmp>i)]
tmp
subset = subset[-tmp,]
subset = df2[which(df2$Correct==FALSE),]
subset = subset[order(subset$T),]
for (i in 1:nrow(subset)){
this = subset[i,]
code = this$Code
tmp = c(which(subset$Code==code))
tmp = tmp[which(tmp>i)]
subset = subset[-tmp,]
}
subset = df2[which(df2$Correct==FALSE),]
subset = subset[order(subset$T),]
i
i=1
this = subset[i,]
code = this$Code
tmp = c(which(subset$Code==code))
tmp = tmp[which(tmp>i)]
subset = subset[-tmp,]
tmp
tmp==0
tmp
if(tmp) next
as.integer(tmp)==0
as.character(tmp)=="0"
as.character(tmp)=="1"
length(tmp)
length(tmp)==0
subset = df2[which(df2$Correct==FALSE),]
subset = subset[order(subset$T),]
for (i in 1:nrow(subset)){
this = subset[i,]
code = this$Code
tmp = c(which(subset$Code==code))
tmp = tmp[which(tmp>i)]
if(length(tmp)==0) next
subset = subset[-tmp,]
}
table(subset$Code)
error = subset$Days-subset$T
summary(error)
hist(error)
table(error)
sum(error)
nrow(df2)
set(df2$Code)
union(df2$Code)
union(df2$Code,df2$Code)
length(union(df2$Code,df2$Code))
sum(error)
292/552
error
length(error)
length(error)/552
1-length(error)/552
table(error)
sum(table(error))
table(error)
names(table(error))
error
summary(error)
table(error)
union(df2$Code,df2$Code)
length(union(df2$Code,df2$Code))
total = length(union(df2$Code,df2$Code))
num_total = length(union(df2$Code,df2$Code))
num_error = sum(table(error))
num_error
num_total
num_correct = num_total-num_error
num_correct
table(error)
table(error)
table_title = as.numeric(table(error))
table_title
table_title = order(as.numeric(table(error)))
table_title
table_title = sort(as.numeric(table(error)))
table_title
as.numeric(table(error))
table(error)
table_title = sort(names(table(error)))
table_title
table_title = as.numeric(names(table(error)))
table_title
table(error)
table_title = as.numeric(names(table(error)))
table_title
table(error)
1.1^table_title
1.1^table_title-1
(1.1^table_title-1)*(table(error)/num_total)
sum((1.1^table_title-1)*(table(error)/num_total))
table(error)
table_title = as.numeric(names(table(error)))
sum((1.1^table_title-1)*(table(error)/num_total))
table_num = table(error)
table_title = as.numeric(names(table(error)))
table_num = table(error)
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum((1.1^table_title-1)*(table_num/num_total))
table_title
table_num
sum((1.1^table_title-1+bench)*(table_num/num_total))
bench = -0.05
sum((1.1^table_title-1+bench)*(table_num/num_total))
-sum((1.1^table_title-1+bench)*(table_num/num_total))
1.1^table_title-1+bench
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum1
sum2 = -bench*num_correct/num_total
sum2
sum = sum1+sum2
sum
bench = -0.20
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
table(error)
length(union(df2$Code,df2$Code))
num_correct = num_total-num_error
num_correct
hist(error)
hist(error,xlab = "Error Days")
hist(error,xlab = "Error Days",main = "Distribution of Error Days")
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 15)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 16)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 30)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 28)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 29)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 27)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 14)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 15)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 7)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 14)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 20)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 15)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 18)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 19)
hist(error,xlab = "Error Days",main = "Distribution of Error Days",breaks = 20)
195/552
238/552
1-195/552-238/552
1.1^14
sum1
bench = -0
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
sum1
bench = -0
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
sum1
sum2
bench = 0.1
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
bench = 0.10
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1-bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
bench = 0.10
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
bench = -0.10
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
for(bench in seq(-0.5,0.5,0.1))
{
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
sum
}
res = c()
for(bench in seq(-0.5,0.5,0.1))
{
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
res = c(res,sum)
}
res
res = c()
for(bench in seq(-0.5,0.5,0.05))
{
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
res = c(res,sum)
}
res
res_df = data.frame(hpr = seq(-0.5,0.5,0.05), res = res)
res_df
res_df$hpr-res
res_df
res = c()
for(bench in seq(-0.5,0.5,0.05))
{
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
res = c(res,sum)
}
res
res_df = data.frame(hpr = seq(-0.5,0.5,0.05), res = res)
res_df$hpr
res_df$hpr - res
res_df$hpr - df$res
res_df$hpr - res_df$res
View(res_df)
abs(res_df$hpr - res_df$res)
abs(res_df$hpr + res_df$res)
write.csv(res_df,"tmp.csv")
# install.packages("D:/FinanceApps/iFind/iFinD/bin/x86/RJSONIO_1.2-0.2.zip",repos=NULL, type="source")
# install.packages("D:/FinanceApps/iFind/iFinD/bin/x86/iFinDR_1.1.tar.gz",repos=NULL,type="source")
#
# library(iFinDR)
# library(RJSONIO)
# THS_iFinDLogin('fdjyjj034','94331017L')
# ToolBar()
#
# #Download stock data
# ids = read.table("id.txt",header = TRUE)
# ids
#
# stock_ids = ids[,1]
# stock_ipo_dates = ids[,3]
#
# for(i in 1:length(stock_ids))
# {
#   id = as.character(stock_ids[i])
#   date1 = as.Date(stock_ipo_dates[i])
#   date2 = date1+100
#   stock = THS_HistoryQuotes(id,'close;changeper;volume;amount;hsl',
#                             'period:D,pricetype:1,rptcategory:0,fqdate:1900-01-01,hb:YSHB',
#                             as.character(date1),as.character(date2))
#   c1 = stock$tables[[1]]$time
#   c2 = as.numeric(unlist(stock$tables[[1]]$table$close))
#   c3 = as.numeric(unlist(stock$tables[[1]]$table$changeper))
#   c4 = as.numeric(unlist(stock$tables[[1]]$table$volume))
#   c5 = as.numeric(unlist(stock$tables[[1]]$table$amount))
#   c6 = as.numeric(unlist(stock$tables[[1]]$table$hsl))
#   df = data.frame(Date = c1, Close = c2, ChgPer = c3, Vol = c4, Amt = c5, Hsl = c6)
#   write.csv(df,paste0("stocks/",id,".csv"))
#   print(i)
# }
#Select data
#From 2014-01-01 to 2016-12-31
ids = read.table("id.txt",header = TRUE)
ids = ids[137:711,]
stock_ids = ids[,1]
stock_ipo_dates = ids[,3]
model1 = read.csv("results_model1.csv",header = TRUE)
df_model1 = data.frame(Code = model1$Code,Pred = model1$Prediction)
# ipo = read.table("ipo.txt",header = TRUE)
# names(ipo) = c("Code","Name","PE","APS","Rate1","Rate2")
#
# industry = read.table("industry.txt",header = TRUE)
# names(industry) = c("Code","Name","IndustryName","IndustryCode")
df = data.frame(Code = 0, X = 0,Hsl = 0,HslChg = 0, HslChg1 = 0 ,HslChg7 = 0,DiffToPred = 0,OpenNextDay = 0,Days = 0)
for(i in 1:length(stock_ids))
{
id = as.character(stock_ids[i])
stock = read.csv(paste0("stocks/",id,".csv"))
forty4 = round(stock$ChgPer[1])>=44
if(forty4==FALSE) next
close = stock$Close
tmp1 = floor(close*1.1*100+0.5)/100
tmp2 = tmp1[-length(tmp1)] == close[-1]
days = 1
for(j in tmp2)
{
if(j==TRUE)
{
days = days+1
}else{
break
}
}
if (days == 1) next
stock = stock[1:(days),]
stock = stock[,-c(2,3,4,5,6)]
stock = cbind(Code = id,stock)
stock$HslChg = c(0,stock[-1,]$Hsl/stock[-nrow(stock),]$Hsl)
stock$HslChg1 = as.numeric(stock$HslChg<1)
stock$HslChg7 = as.numeric(stock$HslChg>7)
#stock$HslChg_3 = stock$HslChg*stock$HslChg3
if(!(id %in% df_model1$Code)) next
pred = df_model1[which(df_model1$Code==id),2]
stock$DiffToPred = (stock$X - pred)
stock$OpenNextDay = 0
stock$OpenNextDay[nrow(stock)] = 1
stock = stock[-1,]
stock$Days = days
df = rbind(df,stock)
}
names(df) = c("Code","T","Hsl","HslChg","HslChg1","HslChg7","DiffToPred","OpenNextDay","Days")
df = df[-1,]
df2 = df[,c(-1,-ncol(df))]
lm0 = glm(OpenNextDay~.,family = binomial(link = 'probit'),data = df2)
summary(lm0)
#
# res1 = c()
# res2 = c()
# for(i in seq(0.3,0.7,0.05)){
#   for(j in seq(2,5,0.5)){
#     for(k in seq(0.1,0.5,0.05)){
#       res1 = c(res1,paste(i,j,k))
#
#       df2$Prediction = predict(lm0,df2[,-ncol(df2)],type = "response")
#       df2$Correct = (df2$Prediction>i | c(0,(df2$Prediction[-1]/df2$Prediction[-nrow(df2)] > j  & df2$Prediction[-1]>k ) ) )
#       df2$Correct = (df2$Correct == df2$OpenNextDay)
#
#       df2$Code = df$Code
#
#       agg = aggregate(df2,by = list(df2$Code),FUN = min)
#       tmp = data.frame(Code = agg$Group.1, Correct = agg$Correct)
#       res2 = c(res2,summary(tmp$Correct)[4])
#
#     }
#   }
# }
# res1[which.max(res2)]
df2$Prediction = predict(lm0,df2[,-ncol(df2)],type = "response")
df2$Correct = (df2$Prediction>0.5 | c(0,(df2$Prediction[-1]/df2$Prediction[-nrow(df2)] > 2  & df2$Prediction[-1]>0.2 ) ) )
df2$Correct = (df2$Correct == df2$OpenNextDay)
df2$Code = df$Code
agg = aggregate(df2,by = list(df2$Code),FUN = min)
tmp = data.frame(Code = agg$Group.1, Correct = agg$Correct)
summary(tmp$Correct)
# tmp_code = df2$Code[which(df$T>5)]
# View(df2[which(df2$Code %in% tmp_code),])
df2$Days = df$Days
subset = df2[which(df2$Correct==FALSE),]
subset = subset[order(subset$T),]
for (i in 1:nrow(subset)){
this = subset[i,]
code = this$Code
tmp = c(which(subset$Code==code))
tmp = tmp[which(tmp>i)]
if(length(tmp)==0) next
subset = subset[-tmp,]
}
error = subset$Days-subset$T
num_total = length(union(df2$Code,df2$Code))
num_error = sum(table(error))
num_total
num_error
num_correct = num_total-num_error
res = c()
for(bench in seq(-0.5,0.5,0.05))
{
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title-1+bench)*(table_num/num_total))
sum2 = -bench*num_correct/num_total
sum = sum1+sum2
res = c(res,sum)
}
res
res_df = data.frame(hpr = seq(-0.5,0.5,0.05), res = res)
seq(-0.5,0.5,0.05)-res
lm0 = lm(res_df$res~res_df$hpr)
summary(lm0)
table_title
(table_num/num_total)
table_num
num_total
table_num/sum(table_num)
sum(table_num/sum(table_num))
sum1 = -sum((1.1^table_title-1)*(table_num/sum(table_num)))
sum1
table/num
table_num
table_title
sum1 = -sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))
sum1
table_num
num_total
sum(table_num[-1])/552
sum(table_num[-1])/552*sum1
sum1
error
table(error)
num_error = sum(table(error[-1]))
sum1 = (sum1 - bench)*num_error/num_total
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))
sum2 = -bench*num_correct/num_total
sum1 = (sum1 - bench)*num_error/num_total
sum = sum1+sum2
sum
num_error/num_total
num_total
num_error
num_error = sum(table(error[-1]))
num_error
table(error[-1])
error[-1]
num_error = sum(table(error)[-1])
num_total
num_error
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))
sum2 = -bench*num_correct/num_total
sum1 = (sum1 - bench)*num_error/num_total
sum = sum1+sum2
sum
num_error/num_total
bench
bench = 0
bench = 0
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))
sum2 = -bench*num_correct/num_total
sum1 = (sum1 - bench)*num_error/num_total
sum = sum1+sum2
sum
res = c()
for(bench in seq(-0.5,0.5,0.05))
{
table_title = as.numeric(names(table(error)))
table_num = table(error)
sum1 = -sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))
sum2 = -bench*num_correct/num_total
sum1 = (sum1 - bench)*num_error/num_total
sum = sum1+sum2
res = c(res,sum)
}
res
res_df = data.frame(hpr = seq(-0.5,0.5,0.05), res = res)
res_df
res
res[-1] - res[-length(res)]
write.csv(res_df,"tmp.csv")
num_error/num_total+num_correct/num_total
lm0 = lm(res_df$res~res_df$res)
summary(lm0)
lm0 = lm(res_df$res~res_df$hpr)
summary(lm0)
-sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))
-sum((1.1^table_title[-1]-1)*(table_num[-1]/sum(table_num[-1])))*num_error/num_total
0.066/0.5688
